/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 15 10:42:56 GMT 2018
 */

package com.ckjava.xutils.http;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ckjava.xutils.http.BaseEntity;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseEntity_ESTest extends BaseEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.orderBy = "";
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{id=null, remarks='null', createUser='null', createDate=null, updateUser='null', updateDate=null, delFlag='null', username='null', orderBy='', desc=null, start=null, pageSize=null}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate();
      baseEntity0.updateDate = (Date) mockDate0;
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{id=null, remarks='null', createUser='null', createDate=null, updateUser='null', updateDate=Fri Feb 14 20:21:21 GMT 2014, delFlag='null', username='null', orderBy='null', desc=null, start=null, pageSize=null}", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setCreateUser("org.apache.commons.io.filefilter.EmptyFileFilter");
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{id=null, remarks='null', createUser='org.apache.commons.io.filefilter.EmptyFileFilter', createDate=null, updateUser='null', updateDate=null, delFlag='null', username='null', orderBy='null', desc=null, start=null, pageSize=null}", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setRemarks("1U./9G=6=");
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{id=null, remarks='1U./9G=6=', createUser='null', createDate=null, updateUser='null', updateDate=null, delFlag='null', username='null', orderBy='null', desc=null, start=null, pageSize=null}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setUsername("NUMBER_FLOAT");
      assertNull(baseEntity0.getDesc());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate(0, 0, 5, 1, 1967);
      baseEntity0.setCreateDate(mockDate0);
      assertNull(baseEntity0.getUsername());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.username = "xk4Oa<QI";
      String string0 = baseEntity0.getUsername();
      assertEquals("xk4Oa<QI", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.username = "";
      String string0 = baseEntity0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setUpdateUser("eF*S_&56`b-");
      String string0 = baseEntity0.getUpdateUser();
      assertEquals("eF*S_&56`b-", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setUpdateUser("");
      String string0 = baseEntity0.getUpdateUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate(0L);
      baseEntity0.setUpdateDate(mockDate0);
      Date date0 = baseEntity0.getUpdateDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setStart(integer0);
      Integer integer1 = baseEntity0.getStart();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(6);
      baseEntity0.setStart(integer0);
      Integer integer1 = baseEntity0.getStart();
      assertEquals(6, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer((-894));
      baseEntity0.start = integer0;
      Integer integer1 = baseEntity0.getStart();
      assertEquals((-894), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setRemarks("/nw");
      String string0 = baseEntity0.getRemarks();
      assertEquals("/nw", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setRemarks("");
      String string0 = baseEntity0.getRemarks();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(6);
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals(6, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer((-1));
      baseEntity0.setPageSize(integer0);
      Integer integer1 = baseEntity0.getPageSize();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.orderBy = "2l))%P}XMxf!.";
      String string0 = baseEntity0.getOrderBy();
      assertEquals("2l))%P}XMxf!.", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setOrderBy("");
      String string0 = baseEntity0.getOrderBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Long long0 = new Long(0);
      baseEntity0.setId(long0);
      Long long1 = baseEntity0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Long long0 = new Long((-1750L));
      baseEntity0.id = long0;
      Long long1 = baseEntity0.getId();
      assertEquals((-1750L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Long long0 = new Long(2732L);
      baseEntity0.id = long0;
      Long long1 = baseEntity0.getId();
      assertEquals(2732L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Boolean boolean0 = Boolean.valueOf(true);
      baseEntity0.setDesc(boolean0);
      Boolean boolean1 = baseEntity0.getDesc();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Boolean boolean0 = Boolean.valueOf(false);
      baseEntity0.desc = boolean0;
      Boolean boolean1 = baseEntity0.getDesc();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setDelFlag("hP*t|PE*BD_T}5");
      String string0 = baseEntity0.getDelFlag();
      assertEquals("hP*t|PE*BD_T}5", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setDelFlag("");
      String string0 = baseEntity0.getDelFlag();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.setCreateUser("n0LAvn");
      String string0 = baseEntity0.getCreateUser();
      assertEquals("n0LAvn", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      baseEntity0.createUser = "";
      String string0 = baseEntity0.getCreateUser();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      MockDate mockDate0 = new MockDate(39, 39, 0, 0, 1428);
      baseEntity0.createDate = (Date) mockDate0;
      Date date0 = baseEntity0.getCreateDate();
      assertEquals("Tue Mar 31 23:48:00 GMT 1942", date0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Date date0 = baseEntity0.getUpdateDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = baseEntity0.getPageSize();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Date date0 = baseEntity0.getCreateDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Long long0 = baseEntity0.getId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getRemarks();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getDelFlag();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Boolean boolean0 = baseEntity0.getDesc();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(8);
      baseEntity0.setStart(integer0);
      String string0 = baseEntity0.toString();
      assertEquals("BaseEntity{id=null, remarks='null', createUser='null', createDate=null, updateUser='null', updateDate=null, delFlag='null', username='null', orderBy='null', desc=null, start=8, pageSize=null}", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = baseEntity0.getStart();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getOrderBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getCreateUser();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      String string0 = baseEntity0.getUpdateUser();
      assertNull(string0);
  }
}
