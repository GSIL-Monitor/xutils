/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 15 10:42:31 GMT 2018
 */

package com.ckjava.xutils.db;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ckjava.xutils.db.ObjectListWithColumn;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectListWithColumn_ESTest extends ObjectListWithColumn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setSql("z#G'");
      String string0 = objectListWithColumn0.getSql();
      assertEquals("z#G'", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setSql("");
      String string0 = objectListWithColumn0.getSql();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setDesc(".kEq0SV9J-e3y54");
      String string0 = objectListWithColumn0.getDesc();
      assertEquals(".kEq0SV9J-e3y54", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setDesc("");
      String string0 = objectListWithColumn0.getDesc();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setDbUrl("");
      String string0 = objectListWithColumn0.getDbUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      Object[] objectArray0 = new Object[5];
      objectListWithColumn0.setColumn(objectArray0);
      Object[] objectArray1 = objectListWithColumn0.getColumn();
      assertEquals(5, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      Object[] objectArray0 = new Object[0];
      objectListWithColumn0.setColumn(objectArray0);
      Object[] objectArray1 = objectListWithColumn0.getColumn();
      assertEquals(0, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setDataList((List<Object[]>) null);
      assertNull(objectListWithColumn0.getDbUrl());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      List<Object[]> list0 = objectListWithColumn0.getDataList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      String string0 = objectListWithColumn0.getDbUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      String string0 = objectListWithColumn0.getDesc();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      String string0 = objectListWithColumn0.getSql();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      objectListWithColumn0.setDbUrl("7tx\":fKpN4W-N;q!");
      String string0 = objectListWithColumn0.getDbUrl();
      assertEquals("7tx\":fKpN4W-N;q!", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectListWithColumn objectListWithColumn0 = new ObjectListWithColumn();
      Object[] objectArray0 = objectListWithColumn0.getColumn();
      assertNull(objectArray0);
  }
}
